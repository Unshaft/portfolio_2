---
const { project } = Astro.props;

const categoryStyles = {
  pro: { label: 'Pro', color: 'bg-gold' },
  perso: { label: 'Perso', color: 'bg-[#A1C298]' },
  study: { label: 'Ã‰tude', color: 'bg-[#5CA0D3]' }
};

const category = categoryStyles[project.category];
---

<article class="relative bg-white rounded-2xl shadow-lg p-6 mb-8 max-w-3xl mx-auto transform transition duration-300 group-hover:scale-[1.02] group-hover:shadow-xl opacity-0 animate-fadein">
  
  {category && (
    <div class="absolute top-4 right-4 z-10">
      <span class={`flex items-center gap-1 text-white text-xs font-semibold px-3 py-1 rounded-full shadow-sm ${category.color}`}>
        {category.label}
        <svg class="w-4 h-4" viewBox="0 0 24 24" fill="currentColor">
          <path d="M12 2L15 8l6 1-4.5 4 1 6-5.5-3-5.5 3 1-6L3 9l6-1 3-6z"/>
        </svg>
      </span>
    </div>
  )}

  {project.image && (
    <div class="relative overflow-hidden rounded-xl mb-5 shadow-md">
      <img
        src={project.image}
        alt={project.title}
        class="w-full h-52 object-cover transition-transform duration-500 ease-in-out group-hover:scale-105"
      />
      
      {project.tag && project.tag.map((tag, i) => (
        <span
          class={`absolute top-2 left-${i * 24}px bg-gray-800 text-white text-xs font-semibold px-3 py-1 rounded-full shadow-sm tag-${tag.toLowerCase().replace(' ', '-')}`}
        >
          {tag}
        </span>
      ))}
    </div>
  )}

  <h2 class="text-2xl md:text-3xl font-bold text-[#264653] mb-2">
    {project.title}
  </h2>

  <p class="text-gray-600 text-base leading-relaxed mb-4">
    {project.description}
  </p>

  <div class="flex flex-wrap gap-2 mb-4">
    {project.stack?.map((tech: string) => (
      <span class="bg-[#E0E1E4] text-gray-800 text-sm font-medium px-3 py-1 rounded-full shadow-sm">
        {tech}
      </span>
    ))}
  </div>
</article>
